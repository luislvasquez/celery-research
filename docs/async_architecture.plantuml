@startuml Synchronous architecture
!pragma teoz true
skinparam DefaultFontName Mono
skinparam DefaultFontSize 12
skinparam component {
  BackgroundColor<<Apache>> LightCoral
  BorderColor<<Apache>> #FF6655
  BorderColor black
  ArrowColor #FF6655
  ArrowFontColor #323232
}

{post_start} Client -> "Web App\n(FastAPI)" as WebApp : HTTP:POST /networks
WebApp -> "Database\n(PostgreSQL)" as DB : Sync INSERT INTO networks PLACEHOLDER AS "BUILDING";
activate DB
rnote over DB
    Inmediate place-holder
    insertion of a network
    in "BUILDING" state
endrnote
DB -> WebApp : Placeholder created for network (ID reference)
deactivate DB
WebApp -> "Async Task Scheduler\n(Asyncio)" as TaskScheduler : Create Async task: UPDATE networks WHERE PLACEHOLDER;
activate TaskScheduler
rnote over TaskScheduler
    Real heavy execution starts
    on a separate task. Client
    already had an inmediate
    feedback.
endrnote
{post_end} WebApp -> Client : Reponse HTTP/200 with network creation triggered
{post_start} <-> {post_end} : Instant\nexecution\ntime
TaskScheduler -> DB : UPDATE networks WHERE PLACEHOLDER TO "ONLINE";
DB -> TaskScheduler : DONE UPDATE
deactivate TaskScheduler

Client -> WebApp : HTTP:GET /networks
WebApp -> DB : SELECT * FROM networks;
DB -> WebApp : networks[]
WebApp -> Client: HTTP/200 with list of networks ()

box "Server"
participant WebApp
participant TaskScheduler
end box

box "DB"
participant DB
end box
@enduml
